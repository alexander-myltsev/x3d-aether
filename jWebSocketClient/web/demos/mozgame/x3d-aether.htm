<!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01//EN" "http://www.w3.org/TR/html4/transitional.dtd">
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="chrome=1">
		<!-- If Google's chrome frame installed, use it! -->
		<!-- Comment needs to be BELOW this meta tag! -->
<!--
//	****************************************************************************
//	jWebSocket Stream Demo (uses jWebSocket Client and Server)
//	Copyright (c) 2010 Alexander Schulze, Innotrade GmbH, Herzogenrath
//	****************************************************************************
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	****************************************************************************
-->
		<meta http-equiv="Content-Language" content="en">
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<title>x3d-aether</title>
		
		<link rel="stylesheet" type="text/css" href="../../res/css/jwebsocket.css">
		<link rel="stylesheet" type="text/css" href="x3dom.css" />
		<link type="text/css" href="../src_x3d/jQuery/jquery-ui.css" rel="stylesheet" />

		<!--
		<style>
			label { width: 100px; float: left; clear: both; }
			#ctrlContainer { border: 1px solid #000; padding: 20px; float: left; width: 280px; margin-left: 20px; }
			#sliderContainer div { float:left; width: 200px; }
			#sliderContainer li { height: 25px; }
			#sliderContainer ul { clear: both; list-style-type: none; margin: 20px 0 10px 0; padding: 0; }
		</style>
		-->
		
		<script src="../../res/js/jWebSocket.js" type="text/javascript"></script>
		<script type="text/javascript" src="x3dom.js"></script>
		<script type="text/javascript" src="../src_x3d/jQuery/jquery.min.js"></script>
		<script type="text/javascript" src="../src_x3d/jQuery/jquery-ui.min.js"></script>		
		
		<script type="text/javascript" language="JavaScript">

			var eLog = null,
				eKeepAlive = null;

			function log( aString ) {
				eLog.innerHTML +=
					aString + "<br>";
				if( eLog.scrollHeight > eLog.clientHeight ) {
					eLog.scrollTop = eLog.scrollHeight - eLog.clientHeight;
				}
			}

			function clearLog() {
				eLog.innerHTML = "";
				eLog.scrollTop = 0;
			}


			var lWSC = null;
			
			function onMessageCallback( aEvent, aToken ) {
				//log( "<font style='color:#888'>jWebSocket message received: '" + aEvent.data + "'</font>" );
				//$("transform").attr("translation", aToken.pos + ' 0 0');
				$("scene").empty().append( aToken.scene );				
			}

			function connect() {
				var lURL = jws.JWS_SERVER_URL;

				log( "Connecting to " + lURL + " ..." );
				try {
					lWSC.open( lURL, {

						// OnOpen callback
						OnOpen: function( aEvent ) {
							log( "<font style='color:#888'>jWebSocket connection established.</font>" );
						},

						// OnMessage callback
						OnMessage: onMessageCallback,

						// OnClose callback
						OnClose: function( aEvent ) {
							log( "<font style='color:#888'>jWebSocket connection closed.</font>" );
						}

					});
				} catch( ex ) {
					log( "Exception: " + ex.message );
				}
			}

			function disconnect() {
				if( lWSC ) {
					lWSC.stopKeepAlive();
					log( "Disconnecting..." );
					var lRes = lWSC.close();
					log( lWSC.resultToString( lRes ) );
				}
			}

			function registerStream() {
				log( "Registering at stream '" + lStream + "'..." );
				var lRes = lWSC.registerStream( lStream );
				log( lWSC.resultToString( lRes ) );
			}

			function unregisterStream() {
				log( "Unregistering from stream '" + lStream + "'..." );
				var lRes = lWSC.unregisterStream( lStream );
				log( lWSC.resultToString( lRes ) );
			}

			function toggleKeepAlive() {
				if( eKeepAlive.checked ) {
					lWSC.startKeepAlive({ interval: 30000 });
				} else {
					lWSC.stopKeepAlive();
				}
			}

			function initPage() {
				eLog = jws.$( "sdivChat" );
				eMessage = jws.$( "stxfMsg" );
				eKeepAlive =  jws.$( "schkKeepAlive" );
				//eStream = jws.$( "sselStream" );
				lStream = "aetherStream";

				if( window.WebSocket ) {
					lWSC = new jws.jWebSocketJSONClient();
				} else {
					jws.$( "sbtnConnect" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnDisconnect" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnClear" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnReg" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnUnreg" ).setAttribute( "disabled", "disabled" );
					jws.$( "schkKeepAlive" ).setAttribute( "disabled", "disabled" );

					var lMsg = jws.MSG_WS_NOT_SUPPORTED;
					alert( lMsg );
					log( lMsg );
				}
			}

			function exitPage() {
				lWSC.stopKeepAlive();
				disconnect();
			}

		</script>
	</head>

	<body
		onload="initPage();"
		onunload="exitPage();"
		>
<!--	remarked temporarily due to chrome 5 browser bug
		<script type="text/javascript">
			var lFrameElem = this.frameElement;
			if( !lFrameElem ) {
				location.replace( "../../index.htm?page=demos/streaming/streaming.htm" );
			}
		</script>
-->		
		<h1>x3d-aether</h1>
		<p>x3d-aether client through jWebSocket.</p>
		
		<x3d showStat="false" showLog="false" x="0px" y="0px" width="400px" height="400px" altImg="helloX3D-alt.png">
		  <scene>
		  </scene>
		</x3d>
		
		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" width="100%">
				<tr class="strDlg">
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnConnect" type="button" value="Connect" onclick="connect();"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnDisconnect" type="button" value="Disconnect" onclick="disconnect();"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnClear" type="button" value="Clear Log" onclick="clearLog();"></td>
					<td class="stdDlg" align="right" width="">
						x3d-aether-stream:
						<input id="schkKeepAlive" type="checkbox" value="off" onclick="toggleKeepAlive();">&nbsp;Keep-Alive&nbsp;
						<input class="sbtnDlg" id="sbtnReg" type="button" value="Register" onclick="registerStream();"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnUnreg" type="button" value="Unregister" onclick="unregisterStream();"></td>
				</tr>
			</table>
		</div>
		
		<div id="sdivChat" class="sdivContainer"
			 style="position:relative; height:300px; overflow:auto;">
		</div>
	
	<!--
	<div id="ctrlContainer">
		<p>viewpoint.position</p>
		<div id="sliderContainer">
			<label>Position</label><div id="positionSlider" class="slider"/>
		</div>
	</div>

	
	<script type="text/javascript">
		$(document).ready(function(){
			$(".slider").slider({min: 0, max: 20, step: 1, value:10, slide: function(e, ui) {
				var newPos = $("#positionSlider").slider('option', 'value');
				$("viewpoint").attr("position", '0 0 ' + newPos);
			}});
		});
	</script>
	-->

	</body>
</html>
