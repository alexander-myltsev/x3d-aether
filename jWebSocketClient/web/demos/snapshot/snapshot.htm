<!DOCTYPE html PUBLIC "-//W3C//DTD html 4.01//EN" "http://www.w3.org/TR/html4/transitional.dtd">
<html>
	<head>
		<meta http-equiv="X-UA-Compatible" content="chrome=1">
		<!-- If Google's chrome frame installed, use it! -->
		<!-- Comment needs to be BELOW this meta tag! -->
<!--
//	****************************************************************************
//	jWebSocket RPC Demo (uses jWebSocket Client and Server)
//	Copyright (c) 2010 Alexander Schulze, Innotrade GmbH, Herzogenrath
//	****************************************************************************
//	This program is free software; you can redistribute it and/or modify it
//	under the terms of the GNU Lesser General Public License as published by the
//	Free Software Foundation; either version 3 of the License, or (at your
//	option) any later version.
//	This program is distributed in the hope that it will be useful, but WITHOUT
//	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
//	FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for
//	more details.
//	You should have received a copy of the GNU Lesser General Public License along
//	with this program; if not, see <http://www.gnu.org/licenses/lgpl.html>.
//	****************************************************************************
-->
		<meta http-equiv="Content-Language" content="en">
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<title>jWebSocket Mobile Snapshot Demo</title>
		<link rel="stylesheet" type="text/css" href="../../res/css/jwebsocket.css">
		<!-- load the jWebSocket JavaScript client library -->
		<script src="../../res/js/jWebSocket.js" type="text/javascript"></script>
		<!-- this one imports the client side file system plug-in -->
		<script type="text/javascript" src="../../res/js/jwsFilesystemPlugIn.js"></script>
		<script type="text/javascript" language="JavaScript">

			var eLog = null;

			function scrollLogToBottom() {
				if( eLog.scrollHeight > eLog.clientHeight ) {
					eLog.scrollTop = eLog.scrollHeight - eLog.clientHeight;
				}
			}

			function log( aString ) {
				eLog.innerHTML +=
					aString + "<br>";
			}

			function clearLog() {
				eLog.innerHTML = "";
				eLog.scrollTop = 0;
			}

			var lWSC = null;

			function connect() {
				var lURL = jws.JWS_SERVER_URL;

				log( "Connecting to " + lURL + " ..." );
				var lRes = lWSC.open( lURL, {

					// OnOpen callback
					OnOpen: function( aEvent ) {
						log( "<font style='color:#888'>jWebSocket connection established.</font>" );
					},

					// OnMessage callback
					OnMessage: function( aEvent ) {
						// log( "<font style='color:#888'>jWebSocket message received: '" + aEvent.data + "'</font>" );
					},

					// OnClose callback
					OnClose: function( aEvent ) {
						log( "<font style='color:#888'>jWebSocket connection closed.</font>" );
					}

				});

				log( lWSC.resultToString( lRes ) );
			}

			function disconnect() {
				if( lWSC ) {
					log( "Disconnecting..." );
					var lRes = lWSC.close({ timeout: 3000 });
					log( lWSC.resultToString( lRes ) );
				}
			}

			function checkImageSize( aEvent ) {
				var TARGET_WIDTH = 320;
				var lImg = null;
				if( !aEvent ) {
					aEvent = window.event;
					if( aEvent ) {
						lImg = aEvent.srcElement;
					}
				} else {
					lImg = aEvent.target;
				}
				if( lImg ) {
					var lAspect = lImg.offsetWidth / lImg.offsetHeight;
					if( lImg.offsetWidth != TARGET_WIDTH ) {
						lImg.style.width = TARGET_WIDTH + "px";
						lImg.style.height = ( lImg.offsetWidth / lAspect ) + "px";
					}
				}
				scrollLogToBottom();
			}

			function onFileSavedObs( aToken ) {
				log( "Picture received: '" + aToken.filename + "':" );
				var lHTML = "<img onload=\"checkImageSize()\" src=\"" + aToken.url + "\"/>";
				log( lHTML );
			}

			function initPage() {
				eLog = jws.$( "sdivLog" );

				if( jws.browserSupportsWebSockets() ) {
					lWSC = new jws.jWebSocketJSONClient();
					lWSC.setFileSystemCallbacks({
						OnFileSaved: onFileSavedObs
					});
				} else {
					jws.$( "sbtnConnect" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnDisconnect" ).setAttribute( "disabled", "disabled" );
					jws.$( "sbtnClear" ).setAttribute( "disabled", "disabled" );

					var lMsg = jws.MSG_WS_NOT_SUPPORTED;
					alert( lMsg );
					log( lMsg );
				}
			}

			function exitPage() {
				disconnect();
			}

		</script>
	</head>

	<body
		onload="initPage();"
		onunload="exitPage();"
		>
<!--	remarked temporarily due to chrome 5 browser bug
		<script type="text/javascript">
			var lFrameElem = this.frameElement;
			if( !lFrameElem ) {
				location.replace( "../../index.htm?page=demos/rpc_rrpc/rpc_rrpc.htm" );
			}
		</script>
-->		
		<h1>jWebSocket Mobile Snapshot Demo</h1>
		<p>This demo shows how to take a picture from a jWebSocket enabled Android or Java ME application and send it to a browser.
		Please connect both this dialog and your Android or Java ME mobile device (also working with the corresponding emulators)
		to the same server and run the Camera Demo on the mobile device and view the incoming images.</p>
		<div id="sdivLog" class="sdivContainer"
			 style="position:relative; height:300px; overflow:auto;">
		</div>
		<div class="sdivContainer">
			<table class="stlbDlg" border="0" cellpadding="3" cellspacing="0" width="100%">
				<tr class="strDlg">
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnConnect" type="button" value="Connect" onclick="connect();"></td>
					<td class="stdDlg" width="5"><input class="sbtnDlg" id="sbtnDisconnect" type="button" value="Disconnect" onclick="disconnect();"></td>
					<td class="stdDlg" width=""><input class="sbtnDlg" id="sbtnClear" type="button" value="Clear Log" onclick="clearLog();"></td>
				</tr>
			</table>
		</div>

	</body>
</html>
